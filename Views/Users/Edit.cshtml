@using LearningApp.Controllers;
@model UserWasRole

@{
	ViewData["Title"] = "Edit User";
}
<section class="d-flex justify-content-center align-items-center mt-4">
	
	<div class="row">
		<h1>Edit User</h1>
		<hr />

		<div class="col-md-12">
			<form asp-action="Edit" method="post">
				<div asp-validation-summary="ModelOnly" class="text-danger"></div>
				<input type="hidden" asp-for="Id" />
				<div class="form-group">
					<label asp-for="Username" class="control-label">Username</label>
					<input asp-for="Username" class="form-control" />
					<span asp-validation-for="Username" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="Email" class="control-label">Email</label>
					<input asp-for="Email" class="form-control" />
					<span asp-validation-for="Email" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="RoleName" class="control-label">Role</label>
					<select asp-for="RoleName" class="form-control">
						@foreach (var item in ViewBag.allroles)
						{
							<option value="@item.Text" selected="@(item.Text == Model.RoleName)" >@item.Text</option>
						}
					</select>
					<span asp-validation-for="RoleName" class="text-danger"></span>
				</div>
				<!-- Add more fields as needed -->

				<div class="form-group mt-3">
					<input type="submit" value="Save" class="btn btn-primary btn-sm" />
					<a asp-action="Index" class="btn btn-success btn-sm">Back to User List</a>
				</div>
			</form>
		</div>
	</div>

	
</section>
@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}

